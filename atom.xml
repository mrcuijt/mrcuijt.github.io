<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mrcuijt&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mrcuijt.github.io/"/>
  <updated>2019-05-30T06:33:40.064Z</updated>
  <id>http://mrcuijt.github.io/</id>
  
  <author>
    <name>Cui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo + GitHub 搭建个人博客</title>
    <link href="http://mrcuijt.github.io/2019/05/30/init-hexo-blog/"/>
    <id>http://mrcuijt.github.io/2019/05/30/init-hexo-blog/</id>
    <published>2019-05-30T05:06:46.000Z</published>
    <updated>2019-05-30T06:33:40.064Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Hexo-GitHub-搭建个人博客"><a href="#Hexo-GitHub-搭建个人博客" class="headerlink" title="Hexo + GitHub 搭建个人博客"></a>Hexo + GitHub 搭建个人博客</h4><h5 id="第一步-环境配置"><a href="#第一步-环境配置" class="headerlink" title="第一步:环境配置"></a>第一步:环境配置</h5><p>本地需要安装 <a href="http://nodejs.cn/download/" target="_blank">NodeJS</a> 和 <a href="https://git-scm.com/downloads" target="_blank">Git</a> 。</p><p>检查是否安装成功</p><pre><code class="python">## Gitgit --version## NPMnpm -v## NodeJSnode -v</code></pre><h5 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h5><pre><code class="python">## 安装 CNPM 设置淘宝镜像npm install -g cnpm --registry=https://registry.npm.taobao.org## 安装 Hexocnpm install -g hexo-cli## 验证是否安装成功hexo -v</code></pre><h5 id="第二步-本地创建项目"><a href="#第二步-本地创建项目" class="headerlink" title="第二步:本地创建项目"></a>第二步:本地创建项目</h5><p>自建一个文件夹 然后进入文件下 比如 D:/hexo ,把 Hexo 安装进该文件夹里</p><pre><code class="python">## 进入 hexo 目录cd D:\hexo## 初始化 hexohexo init## hexo 项目目录结构## D:/hexo## │   .gitignore## │   package-lock.json## │   package.json## │   _config.yml## │   ## ├───node_modules## │               ## ├───scaffolds## │       ## ├───source## │           ## └───themes## 本地运行 hexo 访问 http://localhost:4000hexo s## INFO  Start processing## INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><h5 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h5><p>另打开一个 cmd 到 D:\hexo 目录下</p><pre><code class="python">## 创建一个新的文件，名为 demo## 访问 http://localhost:4000 可以看到新添加 demo 文章hexo n demo## 主动生成hexo g## 清理已生成资源hexo clean</code></pre><h5 id="第三步-部署到-GitHub"><a href="#第三步-部署到-GitHub" class="headerlink" title="第三步:部署到 GitHub"></a>第三步:部署到 GitHub</h5><p>一、安装 hexo-deployer-git 模块</p><pre><code class="python">## 打开 cmd 到 D:\hexo 目录下cd D:\hexo## 安装 hexo-deployer-gitnpm install hexo-deployer-git</code></pre><p>二、GitHub 仓库配置</p><ul><li><p>new repository 新建仓库</p></li><li><p>用户名.github.io 必须是这个格式，就会自动创建站点，完成即可</p></li></ul><p>三、修改 hexo 配置文件</p><pre><code class="python">## _config.yml## 定位到 Deployment# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type:## 需改为如下配置# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: https://github.com/mrcuijt/mrcuijt.github.io.git  branch: master</code></pre><ul><li><code>repo</code> 修改为自己的 GitHub 仓库地址</li></ul><p>四、发布到 GitHub</p><pre><code class="python">## 发布到 GitHubhexo d## 如果是首次安装 Git 会提示输入 GitHub 的用户名和密码进行登录## 访问 https://mrcuijt.github.io </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Hexo-GitHub-搭建个人博客&quot;&gt;&lt;a href=&quot;#Hexo-GitHub-搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo + GitHub 搭建个人博客&quot;&gt;&lt;/a&gt;Hexo + GitHub 搭建个人博客&lt;/h4&gt;&lt;h5 i
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://mrcuijt.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>index</title>
    <link href="http://mrcuijt.github.io/2019/05/30/index/"/>
    <id>http://mrcuijt.github.io/2019/05/30/index/</id>
    <published>2019-05-29T18:34:50.000Z</published>
    <updated>2019-05-29T20:22:58.682Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World</p><p><img src="/2019/05/30/index/index-demo.jpg" alt></p><p>Image</p><pre><code class="java">@WebService(endpointInterface=&quot;com.mycompany.Library&quot;)public class LibraryImpl implements Library {    private static Map&lt;Integer, Book&gt; store = new HashMap&lt;Integer, Book&gt;();    private static int currentId=0;    @Override    public Book addBook(Book book) {        book.setId(++currentId);        store.put(book.getId(), book);        return book;    }    @Override    public Book getBook(int id) {        return store.get(id);    }    @Override    public Book[] getBooksArray() {        List&lt;Book&gt; l = new ArrayList&lt;Book&gt;();        Iterator&lt;Integer&gt; it = store.keySet().iterator();        while(it.hasNext()) {            l.add(store.get(it.next()));        }        Book[] r = l.toArray(new Book[1]);        System.out.println(r.length);        return r;    }    @Override    public List&lt;Book&gt; getBookList() {        List&lt;Book&gt; l = new ArrayList&lt;Book&gt;();        Iterator&lt;Integer&gt; it = store.keySet().iterator();        while(it.hasNext()) {            l.add(store.get(it.next()));        }        return l;    }    @Override    public Map&lt;Integer, Book&gt; getBookMap() {        return store;    }    @Override    public boolean deleteBook(int id) {        if (store.containsKey(id)) {            store.remove(id);            return true;        } else {            return false;        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hello World&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/30/index/index-demo.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;Image&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;@WebService(endpointInterfac
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mrcuijt.github.io/2019/05/30/hello-world/"/>
    <id>http://mrcuijt.github.io/2019/05/30/hello-world/</id>
    <published>2019-05-29T18:31:16.845Z</published>
    <updated>2019-05-29T18:31:16.845Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
